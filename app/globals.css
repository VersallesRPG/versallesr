/* app/globals.css */

/* --- 1. Importar Diretivas do Tailwind --- */
/* Estas linhas injetam os estilos base, componentes e utilitários do Tailwind */
@tailwind base;
@tailwind components;
@tailwind utilities;

/* --- 2. Estilos Base Globais (Opcional - Adaptações do style.css) --- */
/* Você pode adicionar estilos base aqui que não são cobertos pelo Tailwind ou
   para garantir consistência com o design original. */
@layer base {
  /* Define o comportamento de rolagem suave, como no contrato-de-sangue.css */
  /* */
  html {
    @apply scroll-smooth;
  }

  body {
    /* As fontes, cor de fundo e cor de texto padrão já foram aplicadas via classes Tailwind no layout.tsx */
    /* Garante o min-height e overflow, como no style.css original */
    /* */
    @apply min-h-screen overflow-x-hidden;
    /* Suavização de fontes */
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  /* Remove margens padrão de alguns elementos (Tailwind Preflight geralmente cuida disso, mas pode ser reforçado) */
  * {
    @apply m-0 p-0 box-border; /* */
  }

  /* Estilos padrão para links, se desejar */
  a {
    @apply text-vintage-gold transition-colors duration-300;
    text-decoration: none; /* Tailwind não remove por padrão */
  }

  a:hover {
    @apply text-bone-white;
    text-decoration: underline; /* Adiciona sublinhado no hover */
  }

  /* Estilos base para inputs e textareas podem ser definidos aqui,
     embora geralmente sejam estilizados por componente ou classes utilitárias */
  /* Exemplo:
  input[type="text"],
  input[type="email"],
  input[type="password"],
  textarea {
    @apply bg-transparent border border-gray-whisper/20 rounded-lg p-3 text-bone-white focus:border-vintage-gold outline-none;
  }
  */
}

/* --- 3. Componentes Customizados Globais (Opcional) --- */
/* Se você tiver classes de componentes que se repetem muito e não
   quer usar @apply em vários lugares, pode defini-las aqui. */
@layer components {
  /* Exemplo: recriar o estilo base de um botão que você usa muito */
  /*
  .btn-primary {
    @apply inline-block px-6 py-3 bg-vintage-gold text-deep-space-blue rounded-lg font-title font-bold uppercase tracking-wider transition-all duration-300 ease-in-out hover:bg-bone-white hover:shadow-gold-glow-md transform hover:-translate-y-0.5;
  }
  */

  /* Estilo para placeholder de formulário flutuante (baseado no style.css) */
  /* */
  /* O ideal é controlar isso via JavaScript/React no componente Input, mas um CSS base pode ajudar */
  .form-group {
    @apply relative mb-6; /* mb-6 equivale a 1.5rem */
  }

  .form-group input,
  .form-group textarea {
    @apply w-full bg-transparent border border-gray-whisper/20 rounded-lg text-bone-white font-body text-base outline-none transition-colors duration-300 pt-5 px-4 pb-2; /* Ajuste padding para label flutuante */
  }

  .form-group label {
    @apply font-body font-light text-sm text-gray-whisper absolute top-4 left-4 pointer-events-none transition-all duration-200 ease-out;
  }

  /* Estilos aplicados quando o input está focado OU preenchido (placeholder não visível) */
  .form-group input:focus + label,
  .form-group input:not(:placeholder-shown) + label,
  .form-group textarea:focus + label,
  .form-group textarea:not(:placeholder-shown) + label {
    @apply top-1.5 text-xs text-vintage-gold; /* Sobe e diminui */
  }

  .form-group input:focus,
  .form-group input:not(:placeholder-shown),
  .form-group textarea:focus,
  .form-group textarea:not(:placeholder-shown) {
     @apply border-vintage-gold;
  }

  /* Esconder o placeholder padrão quando o label estiver flutuando */
   .form-group input:focus::placeholder,
   .form-group textarea:focus::placeholder {
      color: transparent;
   }

   /* Necessário adicionar placeholder=" " nos inputs/textareas no HTML/JSX */
    .form-group input:not(:placeholder-shown) + label,
    .form-group textarea:not(:placeholder-shown) + label {
       @apply top-1.5 text-xs text-vintage-gold;
    }


}

/* --- 4. Utilitários Customizados Globais (Opcional) --- */
/* Classes utilitárias que você precise e não foram criadas no tailwind.config.ts */
@layer utilities {
  /* Exemplo: .scroll-behavior-smooth { scroll-behavior: smooth; } (Já adicionado em @layer base) */
}